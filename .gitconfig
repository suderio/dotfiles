[user]
	email = paulo.suderio@gmail.com
	name = Paulo Suderio

[core]
	editor = vim
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = ~/.gitignore
	autocrlf = input
	safecrlf = warn
	filemode = false
	pager = delta
[gc]
	auto = 7000
[grep]
	lineNumber = true
[status]
	showUntrackedFiles = all
[web]
	browser = google-chrome
[pull]
	rebase = true
[safe]
  directory = *
[init]
	defaultBranch = main
[http]
	sslVerify = false
[interactive]
	diffFilter = delta --color-only
[rebase]
	autoStash = true
[push]
	default = matching
[color]
	ui = auto
[color "branch"]
	current = yellow bold
	local = green bold
	remote = cyan bold
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "status"]
	added = green bold
	changed = yellow bold
	untracked = red bold
[diff]
  tool = nvimdiff
  guitool = meld
  algorithm = histogram
  prompt = false
[difftool "meld"]
  cmd = meld $LOCAL $REMOTE
  trustExitCode = false
[difftool "nvimdiff"]
    cmd = "nvim -d \"$LOCAL\" \"$REMOTE\""
[merge]
  tool = nvimdiff
  guitool = meld
  ff = false
[mergetool]
  prompt = true
[mergetool "nvimdiff"]
  cmd = "nvim -d \"$LOCAL\" \"$REMOTE\" \"$MERGED\""
[mergetool "meld"]
  cmd = meld $LOCAL $BASE $REMOTE --output=$MERGED
  trustExitCode = false
[delta]
	navigate = true
[gitflow "prefix"]
	feature = feature-
	release = release-
	hotfix = hotfix-
	support = support-
	versiontag = v
[credential]
	helper = store
[alias]
     tree = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --abbrev-commit --date=relative --branches
     # List commits in short form, with colors and branch/tag annotations                                           
     ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate                            
     # List commits showing changed files                                                                           
     ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat                  
     # List with no colors                                                                                          
     lnc = log --pretty=format:"%h\\ %s\\ [%cn]"                                                                    
     # List oneline commits showing dates                                                                           
     lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short        
     # List oneline commits showing relative dates                                                                  
     ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative      
     # default look for short git log                                                                               
     le = log --oneline --decorate                                                                                  
     # all commits related to a file                                                                                
     filelog = log -u                                                                                               
     # Show modified files in last commit                                                                           
     dl = "!git ll -1"                                                                                              
     # Show a diff last commit                                                                                      
     dlc = diff --cached HEAD^                                                                                      
     # Find a file path in codebase                                                                                 
     find = "!git ls-files | grep -i"                                                                               
